frontend:
  framework: Next.js 14 (App Router)
  reactVersion: React 18
  language: TypeScript 5
  runtime: Node.js >=18.0.0
  packageManager: pnpm >=8.0.0
  ui:
    - TailwindCSS 3
    - shadcn/ui
    - class-variance-authority ^0.7.1
    - clsx ^2.0.0
    - lucide-react ^0.507.0
    - tailwind-merge ^2.1.0
    - tailwindcss-animate ^1.0.7
    - radix-ui/react-components
  stateManagement:
    global: Zustand ^4.4.7
    server: TanStack Query ^5.13.4
  forms: React Hook Form ^7.56.2 + Zod ^3.24.4
  formValidation: hookform/resolvers ^5.0.1
  pwa: next-pwa ^5.6.0 (Workbox)
  dateLib: date-fns ^2.30.0
  i18n: none (日本語固定)
  currency: 'Intl.NumberFormat (JPY)'
  componentSeparation:
    nextAppRouter:
      serverDir: 'apps/web/src/app/(server)'
      clientDir: 'apps/web/src/app/(client)'
      rule: |
        • デフォルトは Server Component。
        • 'use client' を宣言するコンポーネントは必ず (client) 配下に置くこと。
        • 共通 UI コンポーネントは packages/ui 下で 'use client' 付きの場合のみ。
        • Server Component から直接 Client Component を import しない（Props 経由のみ許可）。
backend:
  baas: Supabase@^1.0
  db: PostgreSQL 15
  apiClients:
    - supabase-js ^2.39.0
    - auth-helpers-nextjs ^0.8.7
    - ssr ^0.6.1
  edgeFunctions:
    runtime: Deno
    language: TypeScript
  authentication: Supabase Auth (Email, OTP, OAuth)
  storage: Supabase Storage (public bucket for receipts)
deployment:
  hosting: 'Vercel Hobby Plan'
  domain: '*.vercel.app (custom TBD)'
  ciCd:
    - 'GitHub Actions (lint/test/build)'
    - 'Supabase CLI (migrations)'
  buildOptions:
    swcMinify: true
    transpilePackages: ['@duwallet/ui']
quality:
  lint: 'ESLint ^8.55.0 (eslint-config-next, @typescript-eslint/parser ^6.13.2)'
  format: 'Prettier ^3.5.3'
  hooks: 'Husky ^8.0.3 + lint-staged ^15.2.0'
  commits: 'Conventional Commits + commitlint ^18.4.3'
  coverage: 90% lines (unit), 30% (e2e)
testing:
  unit: 'Jest ^29.7.0'
  component: '@testing-library/react ^14.1.2'
  e2e: 'Playwright ^1.52.0 (chromium, webkit, firefox)'
containers:
  - Docker Compose >=2.0 (services: supabase, edge-runtime)
monorepo:
  structure:
    - apps/web (Next.js application)
    - packages/ui (shared component library)
    - supabase (migrations and edge functions)
  workspaces: pnpm workspaces
